{"version":3,"sources":["API/fetchWeather.js","WeatherCard.js","App.js","index.js"],"names":["API","fetchWeather","query","a","axios","data","WeatherCard","props","className","name","sys","country","Math","round","main","temp","src","weather","icon","alt","description","toUpperCase","style","textAlign","App","useState","setQuery","setData","search","e","key","weatherData","value","onChange","target","onKeyPress","undefined","ReactDOM","render","document","getElementById"],"mappings":"uPAEMA,EACC,kDAIMC,EAAY,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,+EAEDC,IAAK,UAEvBJ,EAFuB,cAEVE,EAFU,uFAFJ,uBAEhBG,EAFgB,EAEhBA,KAFgB,kBAOjBA,GAPiB,yDASjB,MATiB,yDAAH,sD,MCoBVC,MAzBf,SAAqBC,GACnB,OACE,6BACkB,OAAfA,EAAMF,KACL,yBAAKG,UAAU,gBACb,4BACGD,EAAMF,KAAKI,KACZ,6BAAMF,EAAMF,KAAKK,IAAIC,UAEvB,4BAAKC,KAAKC,MAAMN,EAAMF,KAAKS,KAAKC,MAAhC,SACA,yBACEC,IAAG,2CAAsCT,EAAMF,KAAKY,QAAQ,GAAGC,KAA5D,WACHC,IAAI,KAEN,4BAAKZ,EAAMF,KAAKY,QAAQ,GAAGG,YAAYC,gBAGzC,yBAAKb,UAAU,eAAec,MAAO,CAACC,UAAW,WAC/C,2DCUKC,MAzBf,WAAgB,IAAD,EACaC,mBAAS,IADtB,mBACNvB,EADM,KACCwB,EADD,OAEWD,qBAFX,mBAENpB,EAFM,KAEAsB,EAFA,KAIPC,EAAM,uCAAG,WAAOC,GAAP,eAAA1B,EAAA,yDACA,UAAV0B,EAAEC,IADQ,gCAEe7B,EAAaC,GAF5B,OAEL6B,EAFK,OAGXJ,EAAQI,GAHG,2CAAH,sDAOZ,OACE,yBAAKvB,UAAU,OACb,2BACEA,UAAU,SACVwB,MAAO9B,EACP+B,SAAU,SAACJ,GAAD,OAAOH,EAASG,EAAEK,OAAOF,QACnCG,WAAYP,SAGJQ,IAAT/B,EAAqB,GAAK,kBAAC,EAAD,CAAaA,KAAMA,MCrBpDgC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.30640039.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst API = {\r\n  URL: \"https://api.openweathermap.org/data/2.5/weather\",\r\n  KEY: \"d4e3c763024b362f191a09174b66ebde\",\r\n};\r\n\r\nexport const fetchWeather = async (query) => {\r\n  try {\r\n    const { data } = await axios(\r\n      //`${API.URL}?q=${query}&exclude=daily,minutely,alerts&units=metric&appid=${API.KEY}`\r\n      `${API.URL}?q=${query}&exclude=daily,minutely,alerts&units=metric&appid=d4e3c763024b362f191a09174b66ebde`\r\n    );\r\n\r\n    return data;\r\n  } catch (err) {\r\n    return null;\r\n  }\r\n};\r\n","import React from \"react\";\r\n\r\nfunction WeatherCard(props) {\r\n  return (\r\n    <div>\r\n      {props.data !== null ? (\r\n        <div className=\"weather-card\">\r\n          <h2>\r\n            {props.data.name}\r\n            <sup>{props.data.sys.country}</sup>\r\n          </h2>\r\n          <h1>{Math.round(props.data.main.temp)}Â°C</h1>\r\n          <img\r\n            src={`http://openweathermap.org/img/wn/${props.data.weather[0].icon}@4x.png`}\r\n            alt=\"\"\r\n          />\r\n          <h4>{props.data.weather[0].description.toUpperCase()}</h4>\r\n        </div>\r\n      ) : (\r\n        <div className=\"weather-card\" style={{textAlign: 'center'}}>\r\n          <h1>That place doesn't exist</h1>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default WeatherCard;\r\n","import React, { useState } from \"react\";\nimport { fetchWeather } from \"./API/fetchWeather\";\nimport \"./App.css\";\nimport WeatherCard from \"./WeatherCard\";\n\nfunction App() {\n  const [query, setQuery] = useState('');\n  const [data, setData] = useState();\n\n  const search = async (e) => {\n    if(e.key === 'Enter') {\n      const weatherData = await fetchWeather(query);\n      setData(weatherData);\n    }\n  }\n\n  return (\n    <div className=\"app\">\n      <input \n        className=\"search\"\n        value={query}\n        onChange={(e) => setQuery(e.target.value)}\n        onKeyPress={search}\n      />\n\n      {data === undefined ? '' : <WeatherCard data={data} />}\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));"],"sourceRoot":""}